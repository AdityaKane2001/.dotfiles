# Common rc
# Things I want in both bash and zsh, because I don't necessarily use zsh all the time.

# General Exports
export EDITOR="vim"

# Load local binaries
export PATH=~/.local/bin:$PATH

# "My Binz"
# Just a bunch of scripts I use daily that I put in a different repository
# Because some are exclusive to different devices and I want to keep it branched.
export PATH=~/.binz/:$PATH

# ls color scheme
export LS_COLORS="$(cat ~/.lscolors)"

##########
# Aliases
##########
# Add color and make human readable

# OSX-specific aliases
if [[ "$OSTYPE" == "darwin"* ]] && [[ -f "$(which gls)" ]]; then
    # Thank you apple!
    alias ls="gls --color"
    alias la='gls -ltah --color=auto'
else
    alias ls="ls --color=auto"
    alias la='ls -ltah --color=auto'
fi
alias df='df -h'
# Grep to have color, give line number, don't tell me it can't access restricted files (sudo), and don't process binary files (garbage output ):
alias grep='grep --color=always --line-number --no-messages --binary-files=without-match'

#alias vi='vim'
#alias top='htop'
alias ssh='ssh -YC'

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    # No window manager for mac
    # Tmux doesn't like to recognize 256 coloring, so let's force it
    # -u fixes backspace error thing
    alias tmux='tmux -2 -u'
    alias mux="tmux a"
    # Fixes tmux window renaming
    DISABLE_AUTO_TITLE="true"
    # Unset the autonaming for tmux
    DISABLE_AUTO_TITLE="true"
fi

# OSX-specific aliases for my mac
if [[ "$OSTYPE" == "darwin"* ]]; then
    alias icat="kitty +kitten icat --silent --transfer-mode=stream"
    alias iclear="kitty +kitten icat --silent --clear --transfer-mode=stream"
    alias zoom="open -a zoom.us"
    alias spotify="open -a Spotify"
    alias slack="open -a Slack"
    alias overleaf="open -a Overleaf"
    alias settings="open -a System\ Settings"
    alias amph="open -a Amphetamine -g"
    alias finder="open ~/Documents"

    # Vimwiki markdown to original markdown converter
    w2md () {
        if [[ -f ~/.vimwiki2md ]]; then
            srcf=$1
            srcfmd=$(echo $srcf|sed -e "s/\.wiki$/.md/")
            destf=${2:-srcfmd}
            sed -f ~/.vimwiki2md $srcf > $destf
        else
            echo "Conversion from vimwiki markdown to md failed! ~/.vimwiki2md not found."
        fi
    }
fi


# SSH-Agent (from scripts/)
alias sagent='source sagent'
#source sagent
if [[ $(hostname) != *"hyperplane"* ]] && [[ $(hostname) != *"scalar"* ]]; then
    # Don't start ssh agent on compute nodes
    source sagent
fi

# Anaconda initializer (from scripts/)
if [[ "$OSTYPE" == "linux-gnu"* ]] && [[ $(hostname) != *"login"* ]]; then
    # I only use anaconda on linux compute nodes.
    source cnda
fi

# Force NCCL to use IPV4
# export NCCL_SOCKET_FAMILY="AF_INET"

# Custom wandb tmp directory
MY_WANDB_DIR="$HOME/.tmp/wandb/"
[ ! -d "$MY_WANDB_DIR" ] && mkdir -p $MY_WANDB_DIR
export WANDB_DIR="$MY_WANDB_DIR"

# Custom ENROOT config path
MY_ENROOT="$HOME/.enroot"
export ENROOT_CONFIG_PATH="$MY_ENROOT"

# My functions

# Who has processes?
alias whodat='ps haeo user | sort -u'

# IP address lookup
alias lip="hostname -I | cut -d' ' -f1"
alias gip="curl -s http://ipinfo.io/ip | cut -d'%' -f1"

# My go-to rsync with deletion
ry () {
    rsync -a -H -x -v --numeric-ids --delete --progress -e "ssh -T -o Compression=no -x" $1 $2
}

# My go-to rsync WITHOUT deletion
rys () {
    rsync -a -H -x -v --numeric-ids --ignore-existing --progress -e "ssh -T -o Compression=no -x" $1 $2
}

# Opens vifm and cds into the directory you :q from.
vicd() {
    local dst="$(command vifm --choose-dir - "$@")"
    if [ -z "$dst" ]; then
        echo 'Directory picking cancelled/failed'
        return 1
    fi
    cd "$dst"
}

# SMUX: SSH and then attach to tmux
smux () {
    ssh -t ${@} 'bash -c "tmux a"'
}
